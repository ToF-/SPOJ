REQUIRE HEAP-MEMORY.fs

10000 CONSTANT /PQUEUE

H-CREATE PQUEUE /PQUEUE 1+ CELLS 2* H-ALLOT
H-CREATE PQUEUE-INDEX /PQUEUE 1+ CELLS H-ALLOT


: PQUEUE-INIT
    PQUEUE /PQUEUE CELLS 2* CELL+ ERASE
    PQUEUE-INDEX /PQUEUE 1+ CELLS ERASE ;


: PQUEUE-ITEM^ ( i -- addr )
    CELLS 2* PQUEUE + ;

: PQUEUE-INDEX^ ( i -- addr )
    PQUEUE-ITEM^ CELL+ @ CELLS PQUEUE-INDEX + ;

: TRACK-PQUEUE-POSITION ( i -- )
    DUP PQUEUE-INDEX^ ! ;

: PQUEUE-COMPARE ( i,j -- n )
    SWAP PQUEUE-ITEM^ @
    SWAP PQUEUE-ITEM^ @ - ;

: PQUEUE-SWAP-QUEUE-CELLS ( i,j -- )
    PQUEUE-ITEM^ SWAP PQUEUE-ITEM^
    2DUP 2@ 2>R 2@ ROT 2! 2R> ROT 2! ;

: PQUEUE-SWAP ( i,j -- )
    2DUP PQUEUE-SWAP-QUEUE-CELLS
    TRACK-PQUEUE-POSITION
    TRACK-PQUEUE-POSITION ;

: PQUEUE-SIFT-UP ( index -- )
    BEGIN
        DUP 1 > WHILE
        DUP 2/
        2DUP PQUEUE-COMPARE 0< IF
            2DUP PQUEUE-SWAP
            NIP
        ELSE
            2DROP 0
        THEN
    REPEAT DROP ;

: PQUEUE-SIFT-DOWN ( index -- )
    BEGIN
        DUP 2*
        DUP PQUEUE @ <= WHILE
        DUP PQUEUE @ < IF
            DUP 1+ 2DUP PQUEUE-COMPARE
            0< IF DROP ELSE NIP THEN
        THEN
        2DUP PQUEUE-COMPARE 0> IF
            2DUP PQUEUE-SWAP
            NIP
        ELSE
            DROP PQUEUE @
        THEN
    REPEAT 2DROP ;

: PQUEUE-INSERT ( record, priority -- )
    ASSERT( PQUEUE @ /PQUEUE <= )
    1 PQUEUE +!
    PQUEUE @ PQUEUE-ITEM^ 2!
    PQUEUE @ TRACK-PQUEUE-POSITION
    PQUEUE @ PQUEUE-SIFT-UP ;

: PQUEUE-EXTRACT ( -- record, priority )
    ASSERT( PQUEUE @ )
    1 PQUEUE-ITEM^ 2@
    1 PQUEUE @ PQUEUE-SWAP
    -1 PQUEUE +!
    1 PQUEUE-SIFT-DOWN ;
    
: PQUEUE-UPDATE ( record,prority -- )
    SWAP CELLS PQUEUE-INDEX + @          \ priority,position
    .S KEY DROP
    TUCK PQUEUE-ITEM^ DUP 2@ .S 2DROP CELL+ !       \ position
    DUP PQUEUE-SIFT-UP PQUEUE-SIFT-DOWN ;


