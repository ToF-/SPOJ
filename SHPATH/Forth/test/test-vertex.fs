REQUIRE ffl/tst.fs
REQUIRE vertex.fs

." TEST VERTEX" CR

T{
    1024 DUP * HEAP-ALLOCATE

    HEAP-HERE
    S" foo" 4 NEW-VERTEX VALUE V
    HEAP-HERE SWAP - 1 3 + CELL + 4 CELLS + ?S
    V VERTEX->NAME S" foo" ?STR
    V VERTEX->#EDGES 4 ?S
    V VERTEX->VISITED? ?FALSE
    V VERTEX->PRIORITY 0 ?S
    V VERTEX->TOTAL-COST 0 ?S

    V VERTEX->VISIT!
    V VERTEX->VISITED? ?TRUE
    V VERTEX->UNVISIT!
    V VERTEX->VISITED? ?FALSE
    17 V VERTEX->PRIORITY!
    V VERTEX->PRIORITY 17 ?S
    450 V VERTEX->TOTAL-COST!
    V VERTEX->TOTAL-COST 450 ?S

    1 225 0 V SET-EDGE
    2 312 1 V SET-EDGE
    5 401 2 V SET-EDGE
    7 999 3 V SET-EDGE

    : CHECK-EDGES
        EDGE-LIMITS DO
            I EDGE->DESTINATION ?S
            I EDGE->COST        ?S
        8 +LOOP ;

    999 7  401 5  312 2  225 1
    V CHECK-EDGES
    BYE

    VARIABLE V 17 V !

      12 V VERTEX->PRIORITY!
    4807 V VERTEX->TOTAL-COST!
    V VERTEX->VISIT!
    V VERTEX->VISITED ?TRUE
    V VERTEX->UNVISIT!
    V VERTEX->VISITED ?FALSE
    V VERTEX->PRIORITY 12 ?S
    V VERTEX->#EDGES 17 ?S
    V VERTEX->TOTAL-COST 4807 ?S

    S" foo-bar" 4 dbg NEW-VERTEX

    VERTICE @ 1 ?S
    LAST-VERTEX VERTEX->PRIORITY 0 ?S
    13 LAST-VERTEX VERTEX->PRIORITY!
    LAST-VERTEX VERTEX->PRIORITY 13 ?S
    LAST-VERTEX VERTEX->#EDGES 4 ?S
    LAST-VERTEX VERTEX->NAME S" foo-bar" ?STR
    300 1 EDGE 0 LAST-VERTEX ADD-EDGE
    200 2 EDGE 1 LAST-VERTEX ADD-EDGE
    250 3 EDGE 2 LAST-VERTEX ADD-EDGE
    100 4 EDGE 3 LAST-VERTEX ADD-EDGE
    LAST-VERTEX VERTEX->EDGES 3 CELLS + @
    DUP COST 100 ?S
    VERTEX# 4 ?S
    HEAP-FREE
}T
